hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - env.seed=118398
    - buffer.prioritized_replay=True
    - buffer.alpha=0.6
    - buffer.beta=0.4
    - buffer.mico_priority.priority_type=current_vs_next
    - buffer.mico_priority.priority_weight=0.75
    - exp_name=DQN_pixels_MICO_BPER_cn_priority_weight_seed_118398
  job:
    name: dqn_cartpole
    chdir: null
    override_dirname: buffer.alpha=0.6,buffer.beta=0.4,buffer.mico_priority.priority_type=current_vs_next,buffer.mico_priority.priority_weight=0.75,buffer.prioritized_replay=True,env.seed=118398,exp_name=DQN_pixels_MICO_BPER_cn_priority_weight_seed_118398
    id: ???
    num: ???
    config_name: config_cartpole
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/zosov/workspace/final_project/dqn_pixels_mico
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/zosov/workspace/final_project/dqn_pixels_mico
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
device: null
exp_name: DQN_pixels_MICO_BPER_cn_priority_weight_seed_118398
env:
  env_name: CartPole-v0
  seed: 118398
collector:
  total_frames: 1000064
  frames_per_batch: 128
  eps_start: 0.5
  eps_end: 0.005
  annealing_frames: 520000
  init_random_frames: 20000
  frame_skip: 4
policy:
  type: CNN_MLP
  cnn_net:
    num_cells:
    - 32
    - 64
    - 64
    kernel_sizes:
    - 8
    - 4
    - 3
    strides:
    - 4
    - 2
    - 1
  mlp_net:
    num_cells:
    - 64
    - 64
  activation: ReLU
  use_batch_norm: false
buffer:
  buffer_size: 100000
  batch_size: 256
  scratch_dir: null
  prioritized_replay: true
  alpha: 0.6
  beta: 0.4
  mico_priority:
    priority_type: current_vs_next
    priority_weight: 0.75
    normalize_priorities: true
logger:
  backend: wandb
  project_name: dqn_pixels_cartpolev0_sweep
  group_name: null
  test_interval: 25000
  num_test_episodes: 5
  video: false
  mode: online
  save_model: false
  save_distributions: false
optim:
  lr: 0.0015
  max_grad_norm: 10
  weight_decay: 1.0e-05
  eps: 0.00015
  scheduler:
    active: false
    type: stepLR
    gamma: 0.4
    step_size: 500000
loss:
  gamma: 0.99
  mico_loss:
    mico_weight: 0.01
    mico_beta: 0.1
    mico_gamma: 0.99
  target_updater:
    type: hard
    hard_update_freq: 50
    num_updates: 1
